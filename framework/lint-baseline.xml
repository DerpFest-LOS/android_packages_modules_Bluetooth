<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.4.0-alpha08" type="baseline" client="" dependencies="true" name="" variant="all" version="8.4.0-alpha08">

    <issue
        id="FlaggedApi"
        message="Field `METADATA_EXCLUSIVE_MANAGER` is a flagged API and should be inside an `if (Flags.supportExclusiveManager())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SUPPORT_EXCLUSIVE_MANAGER) to transfer requirement to caller`)"
        errorLine1="    private static final int METADATA_MAX_KEY = METADATA_EXCLUSIVE_MANAGER;"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothDevice.java"
            line="811"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PRESET_INDEX_UNAVAILABLE` is a flagged API and should be inside an `if (Flags.settingsCanControlHapPreset())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SETTINGS_CAN_CONTROL_HAP_PRESET) to transfer requirement to caller`)"
        errorLine1="        private int mPresetIndex = BluetoothHapClient.PRESET_INDEX_UNAVAILABLE;"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothHapPresetInfo.java"
            line="138"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `AUDIO_LOCATION_INVALID` is a flagged API and should be inside an `if (Flags.leaudioMonoLocationErrata())` check (or annotate the surrounding method `getAudioLocation` with `@FlaggedApi(Flags.FLAG_LEAUDIO_MONO_LOCATION_ERRATA) to transfer requirement to caller`)"
        errorLine1="        return AUDIO_LOCATION_INVALID;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeAudio.java"
            line="1208"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onSourceLost()` is a flagged API and should be inside an `if (Flags.leaudioBroadcastMonitorSourceSyncStatus())` check (or annotate the surrounding method `onSourceLost` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_MONITOR_SOURCE_SYNC_STATUS) to transfer requirement to caller`)"
        errorLine1="                        executor.execute(() -> callback.onSourceLost(broadcastId));"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeBroadcastAssistant.java"
            line="247"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getRssi()` is a flagged API and should be inside an `if (Flags.leaudioBroadcastMonitorSourceSyncStatus())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_MONITOR_SOURCE_SYNC_STATUS) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; mRssi == other.getRssi()"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeBroadcastMetadata.java"
            line="168"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setRssi()` is a flagged API and should be inside an `if (Flags.leaudioBroadcastMonitorSourceSyncStatus())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_MONITOR_SOURCE_SYNC_STATUS) to transfer requirement to caller`)"
        errorLine1="                    builder.setRssi(in.readInt());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeBroadcastMetadata.java"
            line="492"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `RSSI_UNKNOWN` is a flagged API and should be inside an `if (Flags.leaudioBroadcastMonitorSourceSyncStatus())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_MONITOR_SOURCE_SYNC_STATUS) to transfer requirement to caller`)"
        errorLine1="        private int mRssi = RSSI_UNKNOWN;"
        errorLine2="                            ~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeBroadcastMetadata.java"
            line="522"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getRssi()` is a flagged API and should be inside an `if (Flags.leaudioBroadcastMonitorSourceSyncStatus())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_MONITOR_SOURCE_SYNC_STATUS) to transfer requirement to caller`)"
        errorLine1="            mRssi = original.getRssi();"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothLeBroadcastMetadata.java"
            line="553"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNIX_FILE_SOCKET_CREATION_FAILURE` is a flagged API and should be inside an `if (Flags.unixFileSocketCreationFailure())` check (or annotate the surrounding method `connect` with `@FlaggedApi(Flags.FLAG_UNIX_FILE_SOCKET_CREATION_FAILURE) to transfer requirement to caller`)"
        errorLine1="                            BluetoothSocketException.UNIX_FILE_SOCKET_CREATION_FAILURE);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothSocket.java"
            line="470"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNIX_FILE_SOCKET_CREATION_FAILURE` is a flagged API and should be inside an `if (Flags.unixFileSocketCreationFailure())` check (or annotate the surrounding method `getMessage` with `@FlaggedApi(Flags.FLAG_UNIX_FILE_SOCKET_CREATION_FAILURE) to transfer requirement to caller`)"
        errorLine1="            case UNIX_FILE_SOCKET_CREATION_FAILURE:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothSocketException.java"
            line="235"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onDeviceVolumeChanged()` is a flagged API and should be inside an `if (Flags.leaudioBroadcastVolumeControlForConnectedDevices())` check (or annotate the surrounding method `onDeviceVolumeChanged` with `@FlaggedApi(Flags.FLAG_LEAUDIO_BROADCAST_VOLUME_CONTROL_FOR_CONNECTED_DEVICES) to transfer requirement to caller`)"
        errorLine1="            forEach((cb) -> cb.onDeviceVolumeChanged(device, volume));"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothVolumeControl.java"
            line="215"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                case DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING:"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementMethod.java"
            line="224"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `writeToParcel()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="            mChannelSoundingParams.writeToParcel(out, flags);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementParams.java"
            line="196"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setChannelSoundingParams()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                        builder.setChannelSoundingParams("
        errorLine2="                        ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementParams.java"
            line="210"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                                ChannelSoundingParams.CREATOR.createFromParcel(in));"
        errorLine2="                                                      ~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementParams.java"
            line="211"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `setMethodId` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                case DistanceMeasurementMethod.DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING:"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementParams.java"
            line="299"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setConfidenceLevel()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                    return new Builder(in.readDouble(), in.readDouble())"
        errorLine2="                           ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="398"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setDelaySpreadMeters()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                    return new Builder(in.readDouble(), in.readDouble())"
        errorLine2="                           ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="398"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setDetectedAttackLevel()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                    return new Builder(in.readDouble(), in.readDouble())"
        errorLine2="                           ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="398"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMeasurementTimestampNanos()` is a flagged API and should be inside an `if (Flags.channelSounding25q2Apis())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING_25Q2_APIS) to transfer requirement to caller`)"
        errorLine1="                    return new Builder(in.readDouble(), in.readDouble())"
        errorLine2="                           ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="398"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setVelocityMetersPerSecond()` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="                    return new Builder(in.readDouble(), in.readDouble())"
        errorLine2="                           ^">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="398"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NADM_UNKNOWN` is a flagged API and should be inside an `if (Flags.channelSounding())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CHANNEL_SOUNDING) to transfer requirement to caller`)"
        errorLine1="        private int mDetectedAttackLevel = NADM_UNKNOWN;"
        errorLine2="                                           ~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/DistanceMeasurementResult.java"
            line="432"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNIX_FILE_SOCKET_CREATION_FAILURE` is a flagged API and should be inside an `if (Flags.unixFileSocketCreationFailure())` check (or annotate the surrounding method `getL2capLeConnectStatusCode` with `@FlaggedApi(Flags.FLAG_UNIX_FILE_SOCKET_CREATION_FAILURE) to transfer requirement to caller`)"
        errorLine1="            case (BluetoothSocketException.UNIX_FILE_SOCKET_CREATION_FAILURE):"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/SocketMetrics.java"
            line="140"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNIX_FILE_SOCKET_CREATION_FAILURE` is a flagged API and should be inside an `if (Flags.unixFileSocketCreationFailure())` check (or annotate the surrounding method `getRfcommConnectStatusCode` with `@FlaggedApi(Flags.FLAG_UNIX_FILE_SOCKET_CREATION_FAILURE) to transfer requirement to caller`)"
        errorLine1="            case (BluetoothSocketException.UNIX_FILE_SOCKET_CREATION_FAILURE):"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/SocketMetrics.java"
            line="161"
            column="44"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothStatusCodes.SUCCESS, BluetoothStatusCodes.ERROR_TIMEOUT, BluetoothStatusCodes.RFCOMM_LISTENER_START_FAILED_UUID_IN_USE, BluetoothStatusCodes.RFCOMM_LISTENER_OPERATION_FAILED_NO_MATCHING_SERVICE_RECORD, BluetoothStatusCodes.RFCOMM_LISTENER_OPERATION_FAILED_DIFFERENT_APP, BluetoothStatusCodes.RFCOMM_LISTENER_FAILED_TO_CREATE_SERVER_SOCKET, BluetoothStatusCodes.RFCOMM_LISTENER_FAILED_TO_CLOSE_SERVER_SOCKET, BluetoothStatusCodes.RFCOMM_LISTENER_NO_SOCKET_AVAILABLE"
        errorLine1="        return BluetoothStatusCodes.ERROR_PROFILE_SERVICE_NOT_BOUND;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothAdapter.java"
            line="3267"
            column="16"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothStatusCodes.SUCCESS, BluetoothStatusCodes.ERROR_TIMEOUT, BluetoothStatusCodes.RFCOMM_LISTENER_START_FAILED_UUID_IN_USE, BluetoothStatusCodes.RFCOMM_LISTENER_OPERATION_FAILED_NO_MATCHING_SERVICE_RECORD, BluetoothStatusCodes.RFCOMM_LISTENER_OPERATION_FAILED_DIFFERENT_APP, BluetoothStatusCodes.RFCOMM_LISTENER_FAILED_TO_CREATE_SERVER_SOCKET, BluetoothStatusCodes.RFCOMM_LISTENER_FAILED_TO_CLOSE_SERVER_SOCKET, BluetoothStatusCodes.RFCOMM_LISTENER_NO_SOCKET_AVAILABLE"
        errorLine1="        return BluetoothStatusCodes.ERROR_PROFILE_SERVICE_NOT_BOUND;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothAdapter.java"
            line="3298"
            column="16"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothCodecConfig.CODEC_PRIORITY_DISABLED, BluetoothCodecConfig.CODEC_PRIORITY_DEFAULT, BluetoothCodecConfig.CODEC_PRIORITY_HIGHEST"
        errorLine1="                        0,"
        errorLine2="                        ~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothCodecConfig.java"
            line="783"
            column="25"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT, BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE, BluetoothGattCharacteristic.WRITE_TYPE_SIGNED"
        errorLine1="                            characteristic.getWriteType())"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothGatt.java"
            line="1518"
            column="29"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Flag not allowed here"
        errorLine1="            return (mCapability >> 1) &amp; 1;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothHearingAid.java"
            line="106"
            column="20"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Flag not allowed here"
        errorLine1="            return mCapability &amp; 1;"
        errorLine2="                   ~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothHearingAid.java"
            line="123"
            column="20"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothQualityReport.QUALITY_REPORT_ID_MONITOR, BluetoothQualityReport.QUALITY_REPORT_ID_APPROACH_LSTO, BluetoothQualityReport.QUALITY_REPORT_ID_A2DP_CHOPPY, BluetoothQualityReport.QUALITY_REPORT_ID_SCO_CHOPPY, BluetoothQualityReport.QUALITY_REPORT_ID_CONN_FAIL"
        errorLine1="        return mBqrCommon.getQualityReportId();"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothQualityReport.java"
            line="300"
            column="16"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: BluetoothQualityReport.QUALITY_REPORT_ID_MONITOR, BluetoothQualityReport.QUALITY_REPORT_ID_APPROACH_LSTO, BluetoothQualityReport.QUALITY_REPORT_ID_A2DP_CHOPPY, BluetoothQualityReport.QUALITY_REPORT_ID_SCO_CHOPPY, BluetoothQualityReport.QUALITY_REPORT_ID_CONN_FAIL"
        errorLine1="                            + qualityReportIdToString(getQualityReportId())"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/BluetoothQualityReport.java"
            line="1103"
            column="55"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: OobData.LE_DEVICE_ROLE_PERIPHERAL_ONLY, OobData.LE_DEVICE_ROLE_CENTRAL_ONLY, OobData.LE_DEVICE_ROLE_BOTH_PREFER_PERIPHERAL, OobData.LE_DEVICE_ROLE_BOTH_PREFER_CENTRAL"
        errorLine1="        mLeDeviceRole = -1; // Satisfy final"
        errorLine2="                        ~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/OobData.java"
            line="784"
            column="25"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: ScanRecord.DATA_TYPE_FLAGS, ScanRecord.DATA_TYPE_SERVICE_UUIDS_16_BIT_PARTIAL, ScanRecord.DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE, ScanRecord.DATA_TYPE_SERVICE_UUIDS_32_BIT_PARTIAL, ScanRecord.DATA_TYPE_SERVICE_UUIDS_32_BIT_COMPLETE, ScanRecord.DATA_TYPE_SERVICE_UUIDS_128_BIT_PARTIAL, ScanRecord.DATA_TYPE_SERVICE_UUIDS_128_BIT_COMPLETE, ScanRecord.DATA_TYPE_LOCAL_NAME_SHORT, ScanRecord.DATA_TYPE_LOCAL_NAME_COMPLETE, ScanRecord.DATA_TYPE_TX_POWER_LEVEL, ScanRecord.DATA_TYPE_CLASS_OF_DEVICE, ScanRecord.DATA_TYPE_SIMPLE_PAIRING_HASH_C, ScanRecord.DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R, ScanRecord.DATA_TYPE_DEVICE_ID, ScanRecord.DATA_TYPE_SECURITY_MANAGER_OUT_OF_BAND_FLAGS, ScanRecord.DATA_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE, ScanRecord.DATA_TYPE_SERVICE_SOLICITATION_UUIDS_16_BIT, ScanRecord.DATA_TYPE_SERVICE_SOLICITATION_UUIDS_128_BIT, ScanRecord.DATA_TYPE_SERVICE_DATA_16_BIT, ScanRecord.DATA_TYPE_PUBLIC_TARGET_ADDRESS, ScanRecord.DATA_TYPE_RANDOM_TARGET_ADDRESS, ScanRecord.DATA_TYPE_APPEARANCE, ScanRecord.DATA_TYPE_ADVERTISING_INTERVAL, ScanRecord.DATA_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS, ScanRecord.DATA_TYPE_LE_ROLE, ScanRecord.DATA_TYPE_SIMPLE_PAIRING_HASH_C_256, ScanRecord.DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R_256, ScanRecord.DATA_TYPE_SERVICE_SOLICITATION_UUIDS_32_BIT, ScanRecord.DATA_TYPE_SERVICE_DATA_32_BIT, ScanRecord.DATA_TYPE_SERVICE_DATA_128_BIT, ScanRecord.DATA_TYPE_LE_SECURE_CONNECTIONS_CONFIRMATION_VALUE, ScanRecord.DATA_TYPE_LE_SECURE_CONNECTIONS_RANDOM_VALUE, ScanRecord.DATA_TYPE_URI, ScanRecord.DATA_TYPE_INDOOR_POSITIONING, ScanRecord.DATA_TYPE_TRANSPORT_DISCOVERY_DATA, ScanRecord.DATA_TYPE_LE_SUPPORTED_FEATURES, ScanRecord.DATA_TYPE_CHANNEL_MAP_UPDATE_INDICATION, ScanRecord.DATA_TYPE_PB_ADV, ScanRecord.DATA_TYPE_MESH_MESSAGE, ScanRecord.DATA_TYPE_MESH_BEACON, ScanRecord.DATA_TYPE_BIG_INFO, ScanRecord.DATA_TYPE_BROADCAST_CODE, ScanRecord.DATA_TYPE_RESOLVABLE_SET_IDENTIFIER, ScanRecord.DATA_TYPE_ADVERTISING_INTERVAL_LONG, ScanRecord.DATA_TYPE_3D_INFORMATION_DATA, ScanRecord.DATA_TYPE_MANUFACTURER_SPECIFIC_DATA"
        errorLine1="        return mAdvertisingDataType;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="packages/modules/Bluetooth/framework/java/android/bluetooth/le/ScanFilter.java"
            line="423"
            column="16"/>
    </issue>

</issues>
